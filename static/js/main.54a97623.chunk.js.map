{"version":3,"sources":["services/httpService.js","services/authService.js","services/genreService.js","services/movieServices.js","components/list-group.js","components/like.jsx","components/tableBody.jsx","components/tableHeader.jsx","components/table.jsx","components/moviesTable.jsx","components/pagination.js","components/search.jsx","components/movies.jsx","utils/paginate.js","forms/input.jsx","forms/select.jsx","forms/form.jsx","forms/login.jsx","components/navbar.jsx","components/not-found.jsx","services/registrationService.js","forms/register.jsx","components/moviesForm.jsx","components/logout.jsx","components/protectRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","interceptors","response","use","error","status","alert","Promise","reject","obj","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","baseUrl","apiKey","email","password","a","http","data","localStorage","setItem","getJwtToken","getItem","login","logout","removeItem","getCurrentUser","token","jwtDecode","ex","loginWithJwt","getGenres","movieUrl","id","getMovies","deleteMovie","getMovie","saveMovie","movie","_id","body","ListGroup","items","handleGenreChange","currentGenre","className","map","item","name","onClick","Like","isLike","handleLike","classes","TableBody","renderColumnData","column","content","_","renderUniqueColumn","key","this","props","columns","Component","TableHeader","renderSortIcon","sortColumn","path","order","raiseSort","label","Table","MoviesTable","to","title","deleteColumn","handleDelete","user","auth","isAdmin","push","paginatedMovies","Pagination","currentPage","pageSize","handlePageChange","pageCount","Math","ceil","length","pages","range","page","href","Search","value","handleSearchValue","type","placeholder","onChange","e","currentTarget","Movies","state","movies","genres","searchTxt","componentDidMount","setState","index","indexOf","originalMovies","filter","m","genre","handleRaiseSort","allMovies","filteredMovies","toLowerCase","startsWith","startIndex","slice","take","paginate","orderBy","style","float","Input","handleValueChange","htmlFor","Select","Form","validateProperty","schema","Joi","validate","details","message","input","errors","errorMessage","abortEarly","handleSubmit","preventDefault","doSubmit","displayInput","displaySelect","displayButton","disabled","Login","string","required","location","window","from","pathname","onSubmit","Navbar","Fragment","username","NotFound","register","Registration","userService","MoviesForm","numberInStock","dailyRentalRate","number","poupulateGenres","populateMovies","paramId","match","params","mapMovieToData","history","Logout","ProtectedRoute","component","render","rest","App","Register","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54a97623.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedErrors = error.response && error.response.status >= 400 && error.response.status <= 500;\r\n    if (!expectedErrors) {\r\n        alert('Unexpected Errors');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n})\r\n\r\nfunction setJwt(jwt) {\r\n    axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\nconst obj = {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n}\r\n\r\nexport default obj","import http from './httpService';\r\nimport jwtDecode from 'jwt-decode';\r\nimport config from '../config.json';\r\nconst apiEndpoint = config.baseUrl + 'login';\r\n\r\nconst apiKey = \"token\";\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, {\r\n        email, password\r\n    })\r\n    localStorage.setItem(apiKey, jwt);\r\n}\r\n\r\nhttp.setJwt(getJwtToken());\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(apiKey);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(apiKey, jwt);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const token = localStorage.getItem(apiKey);\r\n        return jwtDecode(token);\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getJwtToken() {\r\n    return localStorage.getItem(apiKey);\r\n}\r\n\r\nconst obj = {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithJwt,\r\n    getJwtToken\r\n}\r\n\r\nexport default obj;","import http from './httpService';\r\n\r\nconst apiEndpoint = \"http://localhost:5200/api/genres\";\r\n\r\nexport function getGenres() {\r\n    return http.get(apiEndpoint);\r\n}","import http from './httpService';\r\nconst apiEndpoint = 'http://localhost:5200/api/movies';\r\n\r\nfunction movieUrl(id) {\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n    return http.delete(movieUrl(id));\r\n}\r\n\r\nexport function getMovie(id) {\r\n    return http.get(movieUrl(id));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (movie._id) {\r\n        const body = { ...movie };\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n    return http.post(apiEndpoint, movie);\r\n}","const ListGroup = ({ items, handleGenreChange, currentGenre }) => {\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.map(item => <li key={item._id} className={item.name === currentGenre.name ? \"list-group-item active cursor-pointer\" : \"list-group-item cursor-pointer\"} onClick={() => { handleGenreChange(item) }}>{item.name}</li>)}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ListGroup;","const Like = ({ isLike, handleLike }) => {\r\nlet classes = \"cursor-pointer fa fa-thumbs-\";\r\nclasses += isLike ? \"up\" : \"o-up\";\r\n  return <i className={classes} onClick={handleLike}></i>;\r\n};\r\n\r\nexport default Like;\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass TableBody extends Component {\r\n  renderColumnData = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.id);\r\n  };\r\n\r\n  renderUniqueColumn = (item,column) => {\r\n    return item._id + (column.id || column.key);\r\n  }\r\n\r\n  render() {\r\n    const { items, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.renderUniqueColumn(item,column)}>{this.renderColumnData(item, column)}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n\r\n   renderSortIcon = (column) =>{\r\n    const sortColumn = {...this.props.sortColumn};\r\n    if(sortColumn.path !== column.id) return null;\r\n    if(sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>;\r\n    if(sortColumn.order === 'desc') return <i className=\"fa fa-sort-desc\"></i> \r\n   } \r\n\r\n  render() {\r\n    const { columns, raiseSort } = this.props;\r\n    return (\r\n        <thead>\r\n          <tr>\r\n            {columns.map((column) => (\r\n              <th\r\n                key={column.id || column.key}\r\n                onClick={() => {\r\n                  raiseSort(column.id);\r\n                }}\r\n              >\r\n                {column.label} {this.renderSortIcon(column)}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { columns, raiseSort, sortColumn, items } = this.props;\r\n    return (\r\n      <table className=\"table\">\r\n        <TableHeader\r\n          columns={columns}\r\n          raiseSort={raiseSort}\r\n          sortColumn={sortColumn}\r\n        />\r\n        <TableBody columns={columns} items={items} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nimport Like from \"./like\";\r\nimport Table from \"./table\";\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      id: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => <Link to={`movies/${movie._id}`}>{movie.title}</Link>,\r\n    },\r\n    { id: \"genre.name\", label: \"Genre\" },\r\n    { id: \"numberInStock\", label: \"NumberInStock\" },\r\n    { id: \"dailyRentalRate\", label: \"DailyRentalRate\" },\r\n    {\r\n      key: \"Like\",\r\n      content: (movie) => (\r\n        <Like\r\n          isLike={movie.isLike}\r\n          handleLike={() => {\r\n            this.props.handleLike(movie);\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = () => {\r\n    return {\r\n      key: \"Delete\",\r\n      content: (movie) => (\r\n        <button\r\n          className=\"btn btn-danger btn-small\"\r\n          onClick={() => {\r\n            this.props.handleDelete(movie);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    };\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.columns.push(this.deleteColumn());\r\n    }\r\n  }\r\n\r\n  raiseSort = (column) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === column) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = column;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.raiseSort(sortColumn);\r\n  };\r\n\r\n  render() {\r\n    const { paginatedMovies: items, sortColumn } = this.props;\r\n    return (\r\n      <div>\r\n        <Table\r\n          items={items}\r\n          sortColumn={sortColumn}\r\n          columns={this.columns}\r\n          raiseSort={this.raiseSort}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import _ from \"lodash\";\r\n\r\nconst Pagination = ({ items, currentPage, pageSize, handlePageChange }) => {\r\n    const pageCount = Math.ceil(items.length / pageSize);\r\n    if (pageCount === 1) return null;\r\n    const pages = _.range(1, pageCount + 1);\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map(page => <li key={page} className={page === currentPage ? \"page-item active\" : \"page-item\"}><a className=\"page-link\" href=\"#\" onClick={()=>{handlePageChange(page)}}>{page}</a></li>)}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    const {value,handleSearchValue} = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"search\"\r\n          name=\"query\"\r\n          value={value}\r\n          className=\"form-control m-2\"\r\n          placeholder=\"Enter the Title to Search\"\r\n          onChange={(e) => {\r\n            handleSearchValue(e.currentTarget.value);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovies, deleteMovie } from \"../services/movieServices\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./list-group\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport auth from '../services/authService';\r\nimport Pagination from \"./pagination\";\r\nimport Search from \"./search\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    currentGenre: { _id: \"\", name: \"All Genres\" },\r\n    searchTxt: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const { data: movies } = await getMovies();\r\n    let { data: genres } = await getGenres();\r\n    genres = [{ _id: \"\", name: \"All Genres\" }, ...genres];\r\n    this.setState({ movies, genres });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index].isLike = !movies[index].isLike;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = [...this.state.movies];\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        alert(\"Movie is invalid\");\r\n      } else if(ex.response && ex.response.status >= 400 && ex.response.status <=500) {\r\n        alert(\"Sorry Access Denied You need to have a admin access to continue...\")\r\n      }\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreChange = (genre) => {\r\n    this.setState({ currentGenre: genre, currentPage: 1, searchTxt: \"\" });\r\n  };\r\n\r\n  handleRaiseSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearchValue = (searchTxt) => {\r\n    this.setState({ searchTxt, currentGenre: { _id: \"\", name: \"All Genres\" } });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movies: allMovies,\r\n      sortColumn,\r\n      currentPage,\r\n      pageSize,\r\n      genres,\r\n      currentGenre,\r\n      searchTxt,\r\n    } = this.state;\r\n    const user = auth.getCurrentUser();\r\n    let filteredMovies = allMovies;\r\n    if (searchTxt) {\r\n      filteredMovies = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchTxt.toLowerCase())\r\n      );\r\n    } else {\r\n      filteredMovies =\r\n        currentGenre && currentGenre._id\r\n          ? allMovies.filter((m) => m.genre._id === currentGenre._id)\r\n          : allMovies;\r\n    }\r\n\r\n    const sortedMovies = _.orderBy(\r\n      filteredMovies,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n    const paginatedMovies = paginate(sortedMovies, currentPage, pageSize);\r\n    if (allMovies.length === 0) return <h1>There are no movies in the list</h1>;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={genres}\r\n            currentGenre={currentGenre}\r\n            handleGenreChange={this.handleGenreChange}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <h1>\r\n            There are {filteredMovies.length} number of movies in the page\r\n          </h1>\r\n          <Search\r\n            value={searchTxt}\r\n            handleSearchValue={this.handleSearchValue}\r\n          />\r\n           {user && <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-small btn-primary\"\r\n              style={{ float: \"left\" }}\r\n            >\r\n              New\r\n            </Link>} \r\n          <MoviesTable\r\n            paginatedMovies={paginatedMovies}\r\n            handleLike={this.handleLike}\r\n            handleDelete={this.handleDelete}\r\n            sortColumn={sortColumn}\r\n            raiseSort={this.handleRaiseSort}\r\n          />\r\n          <Pagination\r\n            items={filteredMovies}\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n            handlePageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from 'lodash';\r\nexport function paginate(items,currentPage,pageSize) {\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    const { name, label, type,value, handleValueChange,error } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          type={type}\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          className=\"form-control\"\r\n          onChange={handleValueChange}\r\n        />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Select extends Component {\r\n  render() {\r\n    const { name, label, genres, value, handleValueChange, error } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <select\r\n          className=\"form-control\"\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleValueChange}\r\n        >\r\n          <option value=\"\"></option>\r\n          {genres.map((genre) => (\r\n            <option key={genre._id} value={genre._id}>\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleValueChange = ({ currentTarget: input }) => {\r\n    const errors = {};\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  validate = () => {\r\n    const errors = {};\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  displayInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        type={type}\r\n        label={label}\r\n        value={data[name]}\r\n        handleValueChange={this.handleValueChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  displaySelect = (name, label, genres) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        genres={genres}\r\n        value={data[name]}\r\n        handleValueChange={this.handleValueChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  displayButton = (label) => {\r\n    return (\r\n      <button\r\n        className=\"btn btn-primary btn-small m-2\"\r\n        disabled={this.validate()}\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./form\";\r\nimport auth from \"../services/authService\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.email, data.password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return  <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.displayInput(\"email\", \"Email\")}\r\n          {this.displayInput(\"password\", \"Password\", \"password\")}\r\n          {this.displayButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <NavLink className=\"navbar-brand\" to=\"#\">\r\n        MoviesApp\r\n      </NavLink>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  {user.username}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const NotFound = () => {\r\n    return (  \r\n        <h1>This is a Not-Found Page </h1>\r\n    );\r\n}\r\n \r\nexport default NotFound;\r\n","import http from './httpService';\r\nconst apiEndpoint = 'http://localhost:5200/api/users';\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint,user);\r\n}","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./form\";\r\nimport * as userService from \"../services/registrationService\";\r\nimport auth from '../services/authService';\r\n\r\nclass Registration extends Form {\r\n  state = {\r\n    data: {\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers['x-auth-token']);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.displayInput(\"email\", \"Email\")}\r\n          {this.displayInput(\"username\", \"Username\")}\r\n          {this.displayInput(\"password\", \"Password\", \"password\")}\r\n          {this.displayButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"../forms/form\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieServices\";\r\n\r\nclass MoviesForm extends Form {\r\n  state = {\r\n    genres: [],\r\n    data: {\r\n      title: \"\",\r\n      genre: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genre: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number().required().label(\"NumberInstock\"),\r\n    dailyRentalRate: Joi.number().required().label(\"DailyRentalRate\"),\r\n  };\r\n\r\n  poupulateGenres = async () => {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  };\r\n\r\n  populateMovies = async () => {\r\n    try {\r\n      const paramId = this.props.match.params.id;\r\n      if (paramId === \"new\") return;\r\n      const { data: movie } = await getMovie(paramId);\r\n      this.setState({ data: this.mapMovieToData(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        this.props.history.push(\"/not-found\");\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await this.poupulateGenres();\r\n    await this.populateMovies();\r\n  };\r\n\r\n  mapMovieToData = (movie) => {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genre: movie.genre.id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      await saveMovie(this.state.data);\r\n      this.props.history.push(\"/\");\r\n    } catch(ex) {\r\n      if(ex.response && ex.response.status >= 400 && ex.response.status <= 500) {\r\n        alert(\"Sorry Access Denied You need to have a admin access to continue...\");\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { genres } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.displayInput(\"title\", \"Title\")}\r\n          {this.displaySelect(\"genre\", \"Genre\", genres)}\r\n          {this.displayInput(\"numberInStock\", \"NumberInStock\", \"number\")}\r\n          {this.displayInput(\"dailyRentalRate\", \"DailyRentalRate\", \"number\")}\r\n          {this.displayButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesForm;\r\n","import { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount = () =>{\r\n        auth.logout();\r\n        window.location = \"/\";\r\n    }\r\n\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass ProtectedRoute extends Component {\r\n  render() {\r\n    const { path, component: Component, render, ...rest } = this.props;\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          if (!auth.getCurrentUser())\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: { from: props.location },\r\n                }}\r\n              />\r\n            );\r\n          else return Component ? <Component {...props} /> : render(props);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport auth from './services/authService';\nimport './App.css';\nimport Movies from './components/movies';\nimport Login from './forms/login';\nimport Navbar from './components/navbar';\nimport NotFound from './components/not-found';\nimport Register from './forms/register';\nimport MoviesForm from './components/moviesForm';\nimport Logout from './components/logout';\nimport ProtectedRoute from './components/protectRoute';\n//import ProtectedRoute from './components/protectRoute';\n\n\n\nclass App extends Component {\n  state = {\n  }\n\n  componentDidMount = () => {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    return <div className=\"App\">\n      <Navbar user={this.state.user} />\n      <main className=\"container\">\n        <Switch>\n          <ProtectedRoute path=\"/movies/:id\" component={MoviesForm} />\n          <Route path=\"/movies\" component={Movies} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/\" exact component={Movies} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n    </div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nconsole.log(\"SuperMan\",process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}